#!/bin/sh
InvalidOption=1
TooFewParms=2
UnknownAction=3

#
# Temporary hack - replace with a proper message file
#
msg() {
	pgm=$1
	msgnum=$2
	msgtype=$3
	
	shift 3
	args=$*

	case ${msgnum} in 
		${InvalidOption}) msgtext="Invalid option specified: -";;
		${TooFewParms}) msgtext="Too few Parameters specified. Expected 2 but received: ";;
		${UnknownAction}) msgtext="Unknown action specified: ";;
		*) msgtext="Internal Error. Unknow msgnum: ${msgnum}";;
	esac
	echo "ZPM000"${msgnum}${msgtype} "${msgtext}${args}" >&2
}

#
# Temporary hack - replace with a manpage
#
syntax() {
	echo "\
smpfromppa [-vd] <prefix>
	    
Examples:
	smpfromppa igy630 <-- Copy SMP/E pax files to \$ZOSPM_TMP and then run smpfromnts
" >&2 
	exit 16
}

unpaxfromlocal() {
	sw="$1"
	paxout="${ZOSPM_TMP}/$$.${sw}_pax.out"

	NTS="${ZOSPM_TMP}/smpnts.${sw}/ppaorder"
	mkdir -p ${NTS}
	rc=$?
	if [ ${rc} -gt 0 ]; then
		echo "Unable to create directory ${NTS}" >&2
		return ${rc}
	fi	
	cd "${NTS}"
	pax -rf "${ZOSPM_WORKROOT}/pkg/${sw}.pax.Z" >${paxout} 2>&1
	rc=$?
	cd "${OLDPWD}"
	if [ ${rc} -gt 0 ]; then
		echo "unpax of ${sw} failed." >&2
		echo "${paxout}" >&2
	else
		rm ${paxout}
	fi

	echo "${NTS}"
	return ${rc} 
}

. zospmsetenv

debug=0
verbose=0
opts=""
while getopts ":vdf" opt; do
  case ${opt} in
    d )
      debug=1
      opts="${opts} -d"
      ;;
    v )
      verbose=1
      opts="${opts} -v"
      ;;
    \?)
      if [ ${OPTARG} != "?" ]; then
	msg smpfromppa ${InvalidOption} E "${OPTARG}"
      fi
      syntax
      exit 4
      ;;
  esac
done
shift $(expr $OPTIND - 1 )
if [ $# -lt 1 ]; then
	msg smpfromppa ${TooFewParms} E "$#"
	syntax
	exit 16
fi


mydir=$(callerdir ${0})
ussname=$(echo ${1} | tr '[:upper:]' '[:lower:]'); 
zosname=$(echo ${1} | tr '[:lower:]' '[:upper:]'); 
props="${ZOSPM_WORKROOT}/order/${ussname}order.json"
zospmpropse "${ussname}" order "${props}"

out=`unpaxfromlocal ${zosname}`
rc=$? 
if [ $rc -gt 0 ]; then
	echo "smpfromppa: unpax from local failed with return code $rc" >&2
else
	echo "${out}" 
fi

exit $rc
