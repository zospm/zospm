#!/bin/sh
#set -x

InvalidOption=1
TooFewParms=2
UnknownAction=3
PrefixTooLong=4

#
# Temporary hack - replace with a proper message file
#
msg() {
        pgm=$1
        msgnum=$2
        msgtype=$3

        shift 3
        args=$*

        case ${msgnum} in
                ${InvalidOption}) msgtext="Invalid option specified: -";;
                ${TooFewParms}) msgtext="Too few Parameters specified. Expected 2 but received: ";;
                ${UnknownAction}) msgtext="Unknown action specified: ";;
                ${PrefixTooLong}) msgtext="Prefix must be 6 characters or less. Received: ";;
                *) msgtext="Internal Error. Unknow msgnum: ${msgnum}";;
        esac
        echo "ZPM000"${msgnum}${msgtype} "${msgtext}${args}" >&2
}


while getopts ":vdfq" opt; do
  case ${opt} in
    d )
      debug=1
      ;;
    v )
      verbose=1
      opts="-v"
      ;;
    q )
      quiet=1
      ;;
    \?)
      if [ ${OPTARG} != "?" ]; then
        msg smpconfig ${InvalidOption} E "${OPTARG}"
      fi
      syntax
      exit 4
      ;;
  esac
done
shift $(expr $OPTIND - 1 )
if [ $# -lt 1 ]; then
        msg smpconfig ${TooFewParms} E "$#"
        syntax
        exit 16
fi

. zospmsetenv
sw=$1
ussname=$(echo ${sw} | tr '[:upper:]' '[:lower:]');
zosname=$(echo ${sw} | tr '[:lower:]' '[:upper:]');
prefix=`echo "${ussname}" | awk '{ print substr($1, 0, 3) }'`

smpelibs="${ZOSPM_REPOROOT}/zospm-${prefix}/${ussname}/${ussname}bom.json"
ussname=$(echo ${ussname} | tr '[:lower:]' '[:upper:]')

swparent=`readparent ${ussname} <${smpelibs}`
rc=$?
if [ $rc -gt 0 ]; then
	echo "$swparent"
	exit $rc
fi

swchild=`readchild ${ussname} <${smpelibs}`
rc=$?
if [ $rc -gt 0 ]; then
        echo "$swchild"
        exit $rc
fi

if [ "$swparent" != "0" ] && [ "$quiet" != "1" ]; then
	echo " " >&2
	echo "Warning: Product $zosname is installed into the same SMP/E zone as $swparent" >&2 
	echo "Only $zosname specific cleanup will be performed" >&2 
	echo "If you need to re-install $zosname, then you may need to take manual actions " >&2 
	echo "to clean up SMP/E. You can uninstall/re-install $swparent to resolve this" >&2
	echo " " >&2
fi

if [ "$swchild" != "0" ] && [ "$swchild" != "" ]; then
	echo " " >&2
        echo "Warning: Product $zosname is in a child/parent relationshiop and has other products installed in it's SMP/E zone" >&2
        echo "By running uninstall or using the -c option for $zosname, means the below listed products are also affected." >&2
        echo "Zbrew will automatically uninstall all the below listed products as a result." >&2
        echo "If desired you will need to reinstall these products after re-installing $zosname." >&2
	echo " " >&2
	echo "The following Product(s) are affected and will be uninstalled if required: ">&2
        for ch in ${swchild}; do
		echo "*** ${ch} ***" >&2
	done
        for ch in ${swchild}; do
		swchild_lower=$(echo ${ch} | tr '[:upper:]' '[:lower:]');
		chprefix=`echo "${swchild_lower}" | awk '{ print substr($1, 0, 3) }'`
		swdir="${ZOSPM_REPOROOT}/zospm-${chprefix}/${swchild_lower}/"
		if [ -e "${swdir}" ]; then
	                if [ "${verbose}" = "1" ]; then
	                        echo " " >&2
        	                echo "Proceeding to uninstall $ch" >&2
                	fi
			opts="${opts} -q" 
			ninst=`zospm ${opts} uninstall ${ch}`
		        if [ "${rc}" != 0 ]; then
		                echo "Uninstall of ${ch} failed." >&2
	        	        echo "${uninst}" >&2
	              		exit 16
	       		fi
		fi
        done
	echo " "
	rc=$?
fi

zospmmount -u -s $sw
rc=$?
if [ $rc -gt 0 ]; then
        echo "Dataset cleanup failed. UnInstall aborted"
        exit $rc
fi

drm -f "${ZOSPM_SRC_HLQ}${zosname}*.**"

exit 0
