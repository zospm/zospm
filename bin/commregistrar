#!/bin/sh
#set -x
InvalidOption=1
TooFewParms=2
TooFewEnableParms=3
UnknownAction=4

#
# Temporary hack - replace with a proper message file
#
msg() {
       	pgm=$1
	msgnum=$2
	msgtype=$3

	shift 3
	args=$*

	case ${msgnum} in
		${InvalidOption}) msgtext="Invalid option specified: -";;
		${TooFewParms}) msgtext="Too few parameters specified. Expected at least 3 but received: ";;
		${TooFewEnableParms}) msgtext="Too few parameters specified. Expected 4 but received: ";;
		${UnknownAction}) msgtext="Unknown action specified: ";;
		*) msgtext="Internal Error. Unknow msgnum: ${msgnum}";;
	esac
	echo "ZPM000"${msgnum}${msgtype} "${msgtext}${args}" >&2
}

#
# Temporary hack - replace with a manpage
#
syntax() {
	echo "\
commregistrar [-vd] <swname> enable|disable [<command>]

Examples:
	Enable START DBGMGR command as part of EQAE20 
		commregistrar eqae20 enable \"COM='S DBGMGR'\"
	Disable EQAE20 commands 
        	commregistrar eqae20 disable
Note:
	The PDS \${ZOSPM_ROOT}PARMLIB is created if it does not already exist
	The PDS member COMMND\${ZOSPM_PARMLIB_SFX} is created if it does not already exist
	The PDS member will have the new command text appended if 'enable' is specified.
	The PDS member will have the command text removed if 'disable' is specified.
	Enabling a product that already has an entry is an error.
	Disabling a product that does not have an entry is silent.
	Disabling a product removes the entry from the file - it does NOT mark as DISABLED
" >&2
     	exit 8
}
	
opts=""         	
while getopts ":vdf" opt; do
  case ${opt} in
    d )   	
      debug=1
      opts="${opts} -d" 
      ;;                        
    v )
      verbose=1
      opts="${opts} -v"
      ;;
    \?)         
      if [ ${OPTARG} != "?" ]; then
        msg commregistrar ${InvalidOption} E "${OPTARG}"
      fi                
      syntax
      exit 4
      ;;        
  esac  	
done    	
shift $(expr $OPTIND - 1 )
sw=$(echo $1 | tr '[:lower:]' '[:upper:]');
verb=$(echo $2 | tr '[:lower:]' '[:upper:]');
text="$3"

if [ "${verb}" = "ENABLE" ]; then
	min=3
else
	min=2
fi

if [ $# -lt ${min} ]; then
	msg commregistrar ${TooFewParms} E "$#"
	syntax
	exit 8
fi  

pfx="*"
sfx="*"
header="${pfx} --- ${sw} start --- ${sfx}"
footer="${pfx} --- ${sw} end   --- ${sfx}"

. zospmsetenv

parmlibds="${ZOSPM_TGT_HLQ}PARMLIB"
member="COMMND${ZOSPM_PARMLIB_SFX}"

registrar "${sw}" "${verb}" "${parmlibds}" "${member}" "${header}" "${footer}" "${pfx}" "${sfx}" "${text}"
exit $?
