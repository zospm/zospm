#!/bin/sh
#set -x
InvalidOption=1
TooFewParms=2
TooFewEnableParms=3
UnknownAction=4

#
# Temporary hack - replace with a proper message file
#
msg() {
       	pgm=$1
	msgnum=$2
	msgtype=$3

	shift 3
	args=$*

	case ${msgnum} in
		${InvalidOption}) msgtext="Invalid option specified: -";;
		${TooFewParms}) msgtext="Too few parameters specified. Expected at least 3 but received: ";;
		${TooFewEnableParms}) msgtext="Too few parameters specified. Expected 4 but received: ";;
		${UnknownAction}) msgtext="Unknown action specified: ";;
		*) msgtext="Internal Error. Unknow msgnum: ${msgnum}";;
	esac
	echo "ZPM000"${msgnum}${msgtype} "${msgtext}${args}" >&2
}

#
# Temporary hack - replace with a manpage
#
syntax() {
	echo "\
syslogdregistrar [-vd] <swname> enable|disable

Examples:
	Enable syslogd on the system for eqae20
		syslogdregistrar eqae20 enable syslogd
	Disable syslogd on the system for eqae20 
        	syslogdregistrar eqae20 disable syslogd
Note:
	ZOSPM_SYSLOGD_TMP is used to specify the 'tmp' directory to write logs to
	Enabling syslogd does nothing if /etc/syslog.conf and /etc/rc files already exists
	Disabling syslogd does nothing if the syslogd configuration is not zospm-managed, otherwise it removes the configuration files
" >&2
     	exit 8
}
	
opts=""         	
while getopts ":vdf" opt; do
  case ${opt} in
    d )   	
      debug=1
      opts="${opts} -d" 
      ;;                        
    v )
      verbose=1
      opts="${opts} -v"
      ;;
    \?)         
      if [ ${OPTARG} != "?" ]; then
        msg syslogdregistrar ${InvalidOption} E "${OPTARG}"
      fi                
      syntax
      exit 4
      ;;        
  esac  	
done    	
shift $(expr $OPTIND - 1 )
if [ $# -lt 2 ]; then
        msg syslogdregistrar ${TooFewParms} E "$#"
 	syntax
        exit 8
fi  
sw=$(echo $1 | tr '[:lower:]' '[:upper:]');
verb=$(echo $2 | tr '[:lower:]' '[:upper:]');
if [ "${verb}" = "CONFIG" ]; then
	verb="ENABLE"
fi
if [ "${verb}" = "DECONFIG" ]; then
	verb="DISABLE"
fi

pfx="#"
sfx="#"
header="${pfx} --- ${sw} start --- ${sfx}"
footer="${pfx} --- ${sw} end   --- ${sfx}"

. zospmsetenv

# MSF - this implementation is not complete
# We should track the software packages that get 'enabled' in the 
# header and footer. Once all products are disabled, we can safely remove the daemon.
# Right now, disable does nothing and enable just sets up the daemon if it's not there
set -x
etcconf="/etc/syslog.conf"
etcrc="/etc/rc"

if [ -f "${etcconf}" ] & [ -f "${etcrc}" ]; then
	grep -q 'syslogd' "${etcrc}"
	if [ $? -eq 0 ]; then
		exit 0
	fi
fi
if [ "${verb}" = "DISABLE" ]; then
	exit 0
fi

echo " # /etc/syslog.conf - control output of syslogd
auth.*	${ZOSPM_SYSLOGD_TMP}/syslog.auth.log
*.err	${ZOSPM_SYSLOGD_TMP}/syslog.error.log
*.debug	${ZOSPM_SYSLOGD_TMP}/syslog.debug.log
" >"${etcconf}"

echo "#Start the SYSLOGD daemon for logging
# (clean up old logs too)
sed -n '/^#/!s/.* \(.*\)/\1/p' /etc/syslog.conf | xargs -i rm {}
_BPX_JOBNAME='SYSLOGD' /usr/sbin/syslogd -cuf /etc/syslog.conf & 
sleep 5" >>"${etcrc}"

exit $?
