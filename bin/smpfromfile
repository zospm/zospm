#!/bin/sh
InvalidOption=1
TooFewParms=3
UnknownAction=3

#
# Temporary hack - replace with a proper message file
#
msg() {
	pgm=$1
	msgnum=$2
	msgtype=$3
	
	shift 3
	args=$*

	case ${msgnum} in 
		${InvalidOption}) msgtext="Invalid option specified: -";;
		${TooFewParms}) msgtext="Too few Parameters specified. Expected 2 but received: ";;
		${UnknownAction}) msgtext="Unknown action specified: ";;
		*) msgtext="Internal Error. Unknow msgnum: ${msgnum}";;
	esac
	echo "ZPM000"${msgnum}${msgtype} "${msgtext}${args}" >&2
}

#
# Temporary hack - replace with a manpage
#
syntax() {
	echo "\
	smpreceivefromfile <prefix> <sequential_or_pds_filename>
	    
Examples:
	smpreceivefromfile igy630 'igy630.ptfs(UI12345)' >&2 
	smpreceivefromfile igy630 'igy630.ptf1'" >&2 
	exit 16
}

receivefromzos() {
	sw="$1"
	SMPPTFIN="$2"
	if [ "${verbose}" = "1" ]; then
		echo "SMP/E attempting to receive PTF(s) from ${SMPPTFIN}" >&2
	fi
	rcvcmd='RECEIVE SYSMODS'

	tmpCntlHFS=${ZOSPM_TMP}/$$.cntl.xml

	cat >${tmpCntlHFS} <<zzz
  SET BDY(GLOBAL).
  ${rcvcmd} .
zzz

	smpout=`smp -i ${ZOSPM_SRC_HLQ}${sw}G.GLOBAL.CSI -f ${SMPPTFIN} -w ${ZOSPM_TMP} -r ${ZOSPM_TMP}/rpt -p ${ZOSPM_TMP}/sysprint <${tmpCntlHFS}`
	rc=$?
	if [ ${rc} -gt 0 ]; then
		echo "SMP/E RECEIVE for ${SMPPTFIN} failed." >&2
		echo "${smpout}" >&2
	else
		if [ "${verbose}" = "1" ]; then
        	        echo "SMP/E Receive processing successful for ${SMPPTFIN}" >&2
			echo "${smpout}" >&2
	        fi

		rm ${tmpCntlHFS}
	fi

	return ${rc} 
}

. zospmsetenv 

debug=0
verbose=0
opts=""
while getopts ":vdf" opt; do
  case ${opt} in
    d )
      debug=1
      opts="${opts} -d"
      ;;
    v )
      verbose=1
      opts="${opts} -v"
      ;;
    \?)
      if [ ${OPTARG} != "?" ]; then
	msg smpfromfile ${InvalidOption} E "${OPTARG}"
      fi
      syntax
      exit 4
      ;;
  esac
done
shift $(expr $OPTIND - 1 )
if [ $# -lt 2 ]; then
	msg smpfromfile ${TooFewParms} E "$#"
	syntax
	exit 16
fi

sw="$1"
zosname=$(echo ${sw} | tr '[:lower:]' '[:upper:]');
ussname=$(echo ${sw} | tr '[:upper:]' '[:lower:]');
ptfname="$2"
ussrest="${ptfname##*/}"
dsrest="${ptfname%%.*}"
if [ "$ptfname" != "$ussrest" ]; then
	ptffile="${ptfname}"
	if ! [ -f "${ptffile}" ]; then
		echo "smpfromfile: Unable to find ptf file at HFS file ${ptfname}" >&2
		exit 8
	fi
elif [ "$ptfname" != "$dsrest" ]; then	
	ptffile=$(echo ${ptfname} | tr '[:lower:]' '[:upper:]');
	dls ${ptffile} >/dev/null 2>&1
	exists=$?
	if [ ${exists} -gt 0 ]; then
		echo "smpfromfile: Unable to find ptf file at dataset ${ptfname}" >&2
		exit 8
	fi
else
	hfsfile="${ZOSPM_SRC_ZFSROOT}ptf/${ussname}/${ptfname}"
	if [ -f "${hfsfile}" ]; then
		ptffile="${hfsfile}"
	else
		llq=$(echo ${ptfname} | tr '[:lower:]' '[:upper:]');
		dsfile="${ZOSPM_SRC_HLQ}PTF.${zosname}.${llq}"
		dls ${dsfile} >/dev/null 2>&1
		exists=$?
		if [ ${exists} -gt 0 ]; then 
			echo "smpfromfile: Unable to find ${ptfname} in HFS file: ${hfsfile} or dataset ${dsfile}" >&2
			exit $exists
		fi
		ptffile="${dsfile}"
	fi
fi
		
smpptfin="${ptffile}"
prefix=`echo "${zosname}" | awk '{ print substr($1, 0, 3) }'`

out=`receivefromzos ${zosname} ${smpptfin}`; 
rc=$? 
if [ $rc -gt 0 ]; then
	echo "SMP/E RECEIVE of PTF(s) failed with return code $rc" >&2
fi

exit $rc
