#!/bin/sh
if [ $# != 3 ]; then
	echo "smplstptfs <csi> <zone> <fmid>"
	exit 4
fi
out=$(whence zospminternalfuncs >/dev/null)
if [ $? -eq 0 ]; then
	. zospminternalfuncs
else    	
	echo "zospm tools need to be in your PATH" >&2
	exit 4
fi
out=$(whence zospmexternalfuncs >/dev/null)
if [ $? -eq 0 ]; then
	. zospmexternalfuncs
else    	
	echo "zospm tools need to be in your PATH" >&2
	exit 4
fi

mydir=$(callerdir ${0})
props="${mydir}/../zospmglobalprops.json"
zospmpropse zospm config "${props}"

csi="$(echo ${1} | tr '[:lower:]' '[:upper:]')"
tgtzone="$(echo ${2} | tr '[:lower:]' '[:upper:]')"
fmid="$(echo ${3} | tr '[:lower:]' '[:upper:]')"

tmpCntlHFS=${ZOSPM_TMP}/$$.${tgtzone}.fmidcntl.xml
ptflist=${ZOSPM_TMP}/$$.${tgtzone}.fmidsmp.ptflst
touch ${ptflist}


echo "  SET BOUNDARY(${tgtzone})." >${tmpCntlHFS}
echo "  LIST SYSMOD PTFS FORFMID(${fmid})." >>${tmpCntlHFS}

smpout=`smp -i ${csi} -l ${ptflist} <${tmpCntlHFS}`
rc=$?
if [ $rc -eq 0 ]; then
	result=`awk ' { if (NF == 4 && $2 == "TYPE" && $3 == "=" && ($4 == "PTF" || $4 == "SUPERSEDED")) { print $1; }}' <$ptflist ` 
	rm -rf ${ptflist} ${tmpCntlHFS}
	echo "${result}"
else
	echo "${smpout}" >&2
fi
exit $rc
